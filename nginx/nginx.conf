server {
    listen      80;
    listen [::]:80;
    server_name "";
    return      444;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream backend {
    server host.docker.internal:8001;
    server host.docker.internal:8002;
    server host.docker.internal:8003;
    server host.docker.internal:8004;
}

upstream frontend {
    server frontend:3000;
}

server {
    listen 80;
    listen [::]:80;
    server_name api.platform.test;
    server_tokens off;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    access_log /var/log/nginx/api.log;
    error_log  /var/log/nginx/api-error.log error;

    location / {
        set $suffix "";

        if ($uri = /index.php) {
            set $suffix ?$query_string;
        }

        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header SERVER_PORT $server_port;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_connect_timeout   2;

        proxy_pass http://backend$suffix;
    }
}

server {
    listen 80;
    listen [::]:80;
    server_name *.platform.test platform.test;
    server_tokens off;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    access_log /var/log/nginx/next.log;
    error_log  /var/log/nginx/next-error.log error;

    location / {
        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header SERVER_PORT $server_port;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_connect_timeout   2;

        proxy_pass http://frontend;
    }
}

